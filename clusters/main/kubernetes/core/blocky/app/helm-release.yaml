---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: blocky
  namespace: blocky
spec:
  interval: 15m
  chart:
    spec:
      chart: blocky
      version: 18.8.1
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      stopAll: false
    TZ: US/Eastern
    workload:
      main:
        replicas: 2
        strategy: RollingUpdate
    ingress:
      main:
        enabled: true
        ingressClassName: internal
        hosts:
          - host: blocky.${DOMAIN_0}
            # Below is needed because of lines 50-70 in the blocky common.yaml
            paths: 
              - path: /
                pathType: Prefix
            ##### 
        integrations:
          certManager:
            certificateIssuer: domain-0-le-prod
            enabled: true
    service:
      main:
        type: ClusterIP
      dns:
        externalTrafficPolicy: Local
        loadBalancerIP: ${BLOCKY_IP}
        type: LoadBalancer
    k8sgateway:
      # -- list of processed domains
      domains:
      - domain: "${DOMAIN_0}"
        # -- Optional configuration option for DNS01 challenge that will redirect all acme
        # challenge requests to external cloud domain (e.g. managed by cert-manager)
        # See: https://cert-manager.io/docs/configuration/acme/dns01/
        dnsChallenge:
          enabled: false
          domain: dns01.clouddns.com

    # CANNOT be defined in above yaml section
    queryLog:
      # optional one of: mysql, postgresql, csv, csv-client. If empty, log to console only
      type: ""

    # Disable build in dashboards which use postgres for metric
    configmap:
      dashboard:
        enabled: false
      datasource:
        enabled: false
    cnpg:
      main:
        enabled: false
        
    clientLookup:
      upstream: 192.168.1.1
     
    conditional:
      mapping:
        - domain: localdomain
          dnsserver: 192.168.1.1


      
